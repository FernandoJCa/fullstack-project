basePath: /
definitions:
  models.CreateTodoRequest:
    properties:
      completed:
        type: boolean
      title:
        type: string
    required:
    - title
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  models.UpdateTodoRequest:
    properties:
      completed:
        type: boolean
      title:
        type: string
    type: object
  utils.JsonResponse:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple todo list API.
  title: Todo API
  version: "1.0"
paths:
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JsonResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Todo'
                  type: array
              type: object
        "204":
          description: No Content
      summary: Get all todos
      tags:
      - todos
    post:
      consumes:
      - application/json
      description: Create a new todo
      parameters:
      - description: New todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.CreateTodoRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/utils.JsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
      summary: Create a new todo
      tags:
      - todos
  /todos/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.JsonResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.JsonResponse'
      summary: Delete a todo
      tags:
      - todos
    get:
      consumes:
      - application/json
      description: Get a todo by its ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.JsonResponse'
      summary: Get a single todo
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update an existing todo
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated todo
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/models.UpdateTodoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/utils.JsonResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Todo'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.JsonResponse'
      summary: Update an existing todo
      tags:
      - todos
swagger: "2.0"
